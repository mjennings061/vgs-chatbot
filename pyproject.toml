[project]
name = "vgs-chatbot"
version = "0.1.0"
description = "Chatbot for Volunteer Gliding Squadron queries"
authors = [
    {name = "Michael Jennings",email = "mjennings061@gmail.com"}
]
license = {text = "MIT License"}
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "streamlit (>=1.48.0,<2.0.0)",
    "pydantic[email] (>=2.11.7,<3.0.0)",
    "PyJWT (>=2.8.0,<3.0.0)",
    "bcrypt (>=4.3.0,<5.0.0)",
    "langchain (>=0.3.27,<0.4.0)",
    "langchain-community (>=0.3.27,<0.4.0)",
    "office365-rest-python-client (>=2.5.3,<3.0.0)",
    "sentence-transformers (>=2.2.2,<3.0.0)",
    "pypdf (>=3.17.0,<4.0.0)",
    "python-docx (>=1.1.0,<2.0.0)",
    "openpyxl (>=3.1.2,<4.0.0)",
    "requests (>=2.31.0,<3.0.0)",
    "python-dotenv (>=1.0.0,<2.0.0)",
    "tiktoken (>=0.11.0,<0.12.0)",
    "pymongo (>=4.14.0,<5.0.0)"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
isort = "^6.0.1"
pytest = "^8.4.1"
ruff = "^0.12.8"
pytest-cov = "^6.2.1"
mypy = "^1.17.1"
types-requests = "^2.31.0"
types-psycopg2 = "^2.9.0"
pytest-asyncio = "^1.1.0"

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "asyncio: mark test as async for asyncio testing",
]

[tool.coverage.run]
source = ["vgs_chatbot"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

